{"version":3,"sources":["TodoCard.jsx","Todos.jsx","Todo.jsx","App.js","reportWebVitals.js","index.js"],"names":["TodoCard","props","history","useHistory","todo","id","title","completed","style","backgroundColor","margin","padding","width","color","onClick","push","Todos","useState","todos","setTodos","useEffect","axios","get","then","res","responseTodos","data","Fragment","display","flexWrap","map","CircularProgress","Todo","useParams","todoDetails","setTodoDetails","responseTodo","todoId","userId","App","className","exact","path","children","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oRAwBeA,EArBE,SAACC,GAChB,IAAMC,EAAUC,cACTC,EAAQH,EAARG,KACAC,EAAwBD,EAAxBC,GAAIC,EAAoBF,EAApBE,MAAOC,EAAaH,EAAbG,UAClB,OACE,sBACEC,MAAO,CACLC,gBAAiB,SACjBC,OAAQ,OACRC,QAAS,OACTC,MAAO,QACPC,MAAO,SAETC,QAAS,kBAAMZ,EAAQa,KAAR,gCAAsCV,KARvD,UAUE,6BAAKC,IACL,kDAAmBC,SCaVS,EA3BD,WACZ,MAA0BC,qBAA1B,mBAAOC,EAAP,KAAcC,EAAd,KAQA,OAPAC,qBAAU,WACRC,IAAMC,IAAI,8CAA8CC,MAAK,SAACC,GAC5D,IAAMC,EAAgBD,EAAIE,KAC1BP,EAASM,QAEV,IAGD,cAAC,IAAME,SAAP,UACGT,EACC,gCACE,oBAAIV,MAAO,CAACK,MAAO,UAAnB,wBACA,qBAAKL,MAAO,CAACoB,QAAS,OAAQC,SAAU,QAAxC,SACGX,EAAMY,KAAI,SAAC1B,GAAD,OACT,cAAC,EAAD,CAAUA,KAAMA,YAKtB,cAAC2B,EAAA,EAAD,OCoBOC,EAzCF,WACX,IAAM9B,EAAUC,cACTE,EAAM4B,cAAN5B,GAEP,EAAsCY,qBAAtC,mBAAOiB,EAAP,KAAoBC,EAApB,KACAf,qBAAU,WACRC,IACGC,IADH,qDACqDjB,IAClDkB,MAAK,SAACC,GACL,IAAMY,EAAeZ,EAAIE,KACzBS,EAAeC,QAElB,IAEH,MAA+CF,GAAe,GAAnDG,EAAX,EAAOhC,GAAYiC,EAAnB,EAAmBA,OAAQhC,EAA3B,EAA2BA,MAAOC,EAAlC,EAAkCA,UAClC,OACE,8BACG2B,EACC,gCACE,wBACE1B,MAAO,CAACE,OAAQ,QAChBI,QAAS,kBAAMZ,EAAQa,KAAK,sBAF9B,4BAMA,sBACEP,MAAO,CAACK,MAAO,QAASJ,gBAAiB,SAAUE,QAAS,QAD9D,UAGE,mDAAoB0B,KACpB,uDAAwBC,KACxB,sDAAuBhC,EAAvB,OACA,0DAA2BC,EAA3B,aAIJ,cAACwB,EAAA,EAAD,OCnBOQ,MAff,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,oBAAoBC,SAAU,cAAC,EAAD,MAChD,cAAC,IAAD,CAAOD,KAAK,4BAA4BC,SAAU,cAAC,EAAD,gBCD/CC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvB,MAAK,YAAkD,IAA/CwB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c12a40b6.chunk.js","sourcesContent":["import React from \"react\";\nimport {useHistory} from \"react-router\";\n\nconst TodoCard = (props) => {\n  const history = useHistory();\n  const {todo} = props;\n  const {id, title, completed} = todo;\n  return (\n    <div\n      style={{\n        backgroundColor: \"yellow\",\n        margin: \"15px\",\n        padding: \"15px\",\n        width: \"225px\",\n        color: \"black\",\n      }}\n      onClick={() => history.push(`/react-project-1/todo/${id}`)}\n    >\n      <h4>{title}</h4>\n      <h6>{`Completed: ${completed}`}</h6>\n    </div>\n  );\n};\n\nexport default TodoCard;\n","import axios from \"axios\";\nimport React, {useEffect, useState} from \"react\";\nimport {CircularProgress} from \"@material-ui/core\";\nimport TodoCard from \"./TodoCard\";\n\nconst Todos = () => {\n  const [todos, setTodos] = useState();\n  useEffect(() => {\n    axios.get(\"https://jsonplaceholder.typicode.com/todos\").then((res) => {\n      const responseTodos = res.data;\n      setTodos(responseTodos);\n    });\n  }, []);\n\n  return (\n    <React.Fragment>\n      {todos ? (\n        <div>\n          <h1 style={{color: \"yellow\"}}>TODO CARDS</h1>\n          <div style={{display: \"flex\", flexWrap: \"wrap\"}}>\n            {todos.map((todo) => (\n              <TodoCard todo={todo} />\n            ))}\n          </div>\n        </div>\n      ) : (\n        <CircularProgress />\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default Todos;\n","import React, {useState, useEffect} from \"react\";\nimport {useParams, useHistory} from \"react-router-dom\";\nimport axios from \"axios\";\nimport {CircularProgress} from \"@material-ui/core\";\n\nconst Todo = () => {\n  const history = useHistory();\n  const {id} = useParams();\n\n  const [todoDetails, setTodoDetails] = useState();\n  useEffect(() => {\n    axios\n      .get(`https://jsonplaceholder.typicode.com/todos/${id}`)\n      .then((res) => {\n        const responseTodo = res.data;\n        setTodoDetails(responseTodo);\n      });\n  }, []);\n\n  const {id: todoId, userId, title, completed} = todoDetails || {};\n  return (\n    <div>\n      {todoDetails ? (\n        <div>\n          <button\n            style={{margin: \"15px\"}}\n            onClick={() => history.push(\"/react-project-1/\")}\n          >\n            Return to home\n          </button>\n          <div\n            style={{color: \"black\", backgroundColor: \"yellow\", padding: \"15px\"}}\n          >\n            <h2>{`Todo ID is: ${todoId}`}</h2>\n            <h2>{`Todo userID is: ${userId}`}</h2>\n            <h2>{`Todo title is: ${title}.`}</h2>\n            <h2>{`Is todo completed? ${completed}.`}</h2>\n          </div>\n        </div>\n      ) : (\n        <CircularProgress />\n      )}\n    </div>\n  );\n};\n\nexport default Todo;\n","import React from \"react\";\nimport \"./App.css\";\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\nimport Todos from \"./Todos\";\nimport Todo from \"./Todo\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Router>\n          <Switch>\n            <Route exact path=\"/react-project-1/\" children={<Todos />} />\n            <Route path=\"/react-project-1/todo/:id\" children={<Todo />} />\n          </Switch>\n        </Router>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}